Para comenzar contesta las siguientes preguntas:

¿Cuáles son los principales elementos de una base de datos relacional?

    > tablas
    > vistas
    > esquemas

¿Cuáles son los principales elementos de una base de datos no relacional (NoSQL)?

    > colecciones
    > documentos

¿Qué ventajas tiene usar una base de datos relacional?

    > se puede tener elementos separados por tablas y establecer relaciones entre ellas asi como operaciones para
    agregacion.

¿Qué ventajas tiene usar una base de datos no relacional?

     > mostrar jerarquias en la organizacion de los datos usan claves y valores asi como subconjuntos

¿Cuál es el mejor tipo de base de datos entonces?

    > depende el requerimiento.


Fecha, nombre y texto de cada comentario.

    {date:1,text:1, name: 1}


Título, elenco y año de cada película.

    {title:1, cast: 1, year:1 }

Nombre y contraseña de cada usuario.

    {name:1, password:1}

¿Qué comentarios ha hecho Greg Powell?

    {name:'Greg Powell'}

¿Qué comentarios han hecho Greg Powell o Mercedes Tyler?

    {$or :[{name:'Greg Powell'},{name:'Mercedes Tyler'}]}

    {name :{ $in : ['Greg Powell', 'Mercedes Tyler'] }}

¿Cuál es el máximo número de comentarios en una película?

    {num_mflix_comments: 1}
    {num_mflix_comments: -1}

¿Cuál es título de las cinco películas más comentadas?

    {title:1}
    {num_mflix_comments: 1}
    5


1 .- Obtén los datos de contacto de cada compañía.

    project -> {phone_number: 1, email_address: 1, name: 1}

2 .- Obtén el identificador de la clase de cada calificación.

    filter -> { class_id : db.collection.distinct( class_id ) }
    project -> {_id:1}

3 .- Obtén el nombre de todas las compañias fundadas en octubre.

    filter -> {founded_month: 10}
    project -> { name: 1 }

4 .- Obtén el nombre de todas las compañías fundadas en 2008.

    filter -> {founded_year: 2008}

5 .- Obtén todos los post del autor machine.

    filter -> {author: 'machine'}

6 .- Obtén todas las calificaciones provenientes de los grupos 357, 57 y 465.

    project -> {scores: 1}
    filter -> { class_id : { $in: [357, 57, 465]}}

7 .- Obtén todas las compañías fundadas en octubre del 2008.

    filter -> {$and: [{founded_year: 2008},{founded_month: 10}]}

8 .- Obtén todas las compañias con más de 50 empleados.

    filter - {number_of_employees: { $gte : 50}}
    project - {phone_number: 1, email_address: 1, name: 1}

9 .- Obtén las rutas con un número de paradas entre 1 y 5.

     filter -> {$and: [{stops:{$gte:1}},{stops:{$lte:5}}]}

10 .- Obtén la empresa con el menor número de empleados.

    project -> {name: 1, number_of_employees: 1}
    sort -> {number_of_employees: 1}
    limit -> 1

11 .- Obtén la empresa con el mayor número de empleados.

    project -> {name: 1, number_of_employees: 1}
    sort -> {number_of_employees: -1}
    limit -> 1

12 .- Obtén el viaje con mayor duración.

    sort -> {tripduration: -1}
    limit -> 1

13 .- Obtén el viaje con menor duración.

    sort -> {tripduration: 1}
    limit -> 1

